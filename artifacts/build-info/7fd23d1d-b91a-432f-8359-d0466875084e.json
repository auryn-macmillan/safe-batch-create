{
  "id": "7fd23d1d-b91a-432f-8359-d0466875084e",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.5.3",
  "solcLongVersion": "0.5.3+commit.10d17f24",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/SafeBatchCreate.sol": {
        "content": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity ^0.5.3;\n\nimport '@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol';\n\ncontract SafeBatchCreate {\n  event safeCreate(address safe, address owner);\n\n  function batchCreate(address owner) public {\n      emit safeCreate(address(0x0), owner);\n  }\n}\n"
      },
      "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol": {
        "content": "pragma solidity ^0.5.3;\nimport \"./GnosisSafeProxy.sol\";\n\ninterface IProxyCreationCallback {\n    function proxyCreated(GnosisSafeProxy proxy, address _mastercopy, bytes calldata initializer, uint256 saltNonce) external;\n}\n"
      },
      "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol": {
        "content": "pragma solidity >=0.5.0 <0.7.0;\n\n/// @title IProxy - Helper interface to access masterCopy of the Proxy on-chain\n/// @author Richard Meissner - <richard@gnosis.io>\ninterface IProxy {\n    function masterCopy() external view returns (address);\n}\n\n/// @title GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n/// @author Stefan George - <stefan@gnosis.io>\n/// @author Richard Meissner - <richard@gnosis.io>\ncontract GnosisSafeProxy {\n\n    // masterCopy always needs to be first declared variable, to ensure that it is at the same location in the contracts to which calls are delegated.\n    // To reduce deployment costs this variable is internal and needs to be retrieved via `getStorageAt`\n    address internal masterCopy;\n\n    /// @dev Constructor function sets address of master copy contract.\n    /// @param _masterCopy Master copy address.\n    constructor(address _masterCopy)\n        public\n    {\n        require(_masterCopy != address(0), \"Invalid master copy address provided\");\n        masterCopy = _masterCopy;\n    }\n\n    /// @dev Fallback function forwards all transactions and returns all received return data.\n    function ()\n        external\n        payable\n    {\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            let masterCopy := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\n            // 0xa619486e == keccak(\"masterCopy()\"). The value is right padded to 32-bytes with 0s\n            if eq(calldataload(0), 0xa619486e00000000000000000000000000000000000000000000000000000000) {\n                mstore(0, masterCopy)\n                return(0, 0x20)\n            }\n            calldatacopy(0, 0, calldatasize())\n            let success := delegatecall(gas, masterCopy, 0, calldatasize(), 0, 0)\n            returndatacopy(0, 0, returndatasize())\n            if eq(success, 0) { revert(0, returndatasize()) }\n            return(0, returndatasize())\n        }\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol": {
        "GnosisSafeProxy": {
          "abi": [
            {
              "inputs": [
                {
                  "name": "_masterCopy",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "payable": true,
              "stateMutability": "payable",
              "type": "fallback"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506040516020806101858339810180604052602081101561003057600080fd5b5051600160a060020a0381161515610093576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806101616024913960400191505060405180910390fd5b60008054600160a060020a03909216600160a060020a0319909216919091179055609f806100c26000396000f3fe608060405273ffffffffffffffffffffffffffffffffffffffff600054167fa619486e0000000000000000000000000000000000000000000000000000000060003514156050578060005260206000f35b3660008037600080366000845af43d6000803e801515606e573d6000fd5b3d6000f3fea165627a7a72305820341ce4df7e735a306cef8737f2e932898a748bf21bfc7252eb82e3b2295f85780029496e76616c6964206d617374657220636f707920616464726573732070726f7669646564",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x185 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x161 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x9F DUP1 PUSH2 0xC2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND PUSH32 0xA619486E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD EQ ISZERO PUSH1 0x50 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 ISZERO ISZERO PUSH1 0x6E JUMPI RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x0 RETURN INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLVALUE SHR 0xe4 0xdf PUSH31 0x735A306CEF8737F2E932898A748BF21BFC7252EB82E3B2295F85780029496E PUSH23 0x616C6964206D617374657220636F707920616464726573 PUSH20 0x2070726F76696465640000000000000000000000 ",
              "sourceMap": "470:1529:0:-;;;912:177;8:9:-1;5:2;;;30:1;27;20:12;5:2;912:177:0;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;912:177:0;-1:-1:-1;;;;;982:25:0;;;;974:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1058:10;:24;;-1:-1:-1;;;;;1058:24:0;;;-1:-1:-1;;;;;;1058:24:0;;;;;;;;;470:1529;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "608060405273ffffffffffffffffffffffffffffffffffffffff600054167fa619486e0000000000000000000000000000000000000000000000000000000060003514156050578060005260206000f35b3660008037600080366000845af43d6000803e801515606e573d6000fd5b3d6000f3fea165627a7a72305820341ce4df7e735a306cef8737f2e932898a748bf21bfc7252eb82e3b2295f85780029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND PUSH32 0xA619486E00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD EQ ISZERO PUSH1 0x50 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 ISZERO ISZERO PUSH1 0x6E JUMPI RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x0 RETURN INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLVALUE SHR 0xe4 0xdf PUSH31 0x735A306CEF8737F2E932898A748BF21BFC7252EB82E3B2295F857800290000 ",
              "sourceMap": "470:1529:0:-;;;1368:42;1364:1;1358:8;1354:57;1546:66;1542:1;1529:15;1526:87;1523:2;;;1642:10;1639:1;1632:21;1680:4;1677:1;1670:15;1523:2;1731:14;1728:1;1725;1712:34;1826:1;1823;1807:14;1804:1;1792:10;1787:3;1774:54;1862:16;1859:1;1856;1841:38;1895:14;;1892:2;;;1922:16;1919:1;1912:27;1892:2;1964:16;1961:1;1954:27"
            },
            "methodIdentifiers": {}
          }
        },
        "IProxy": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "masterCopy",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "masterCopy()": "a619486e"
            }
          }
        }
      },
      "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol": {
        "IProxyCreationCallback": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "proxy",
                  "type": "address"
                },
                {
                  "name": "_mastercopy",
                  "type": "address"
                },
                {
                  "name": "initializer",
                  "type": "bytes"
                },
                {
                  "name": "saltNonce",
                  "type": "uint256"
                }
              ],
              "name": "proxyCreated",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "proxyCreated(address,address,bytes,uint256)": "1e52b518"
            }
          }
        }
      },
      "contracts/SafeBatchCreate.sol": {
        "SafeBatchCreate": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "batchCreate",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "safe",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "safeCreate",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060fb8061001f6000396000f3fe6080604052348015600f57600080fd5b50600436106044577c0100000000000000000000000000000000000000000000000000000000600035046398217d2c81146049575b600080fd5b607960048036036020811015605d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16607b565b005b604080516000815273ffffffffffffffffffffffffffffffffffffffff8316602082015281517f3976bf2aa4e13cadccca621650482e51213672fd3d1634f4ad087534cfdd55b1929181900390910190a15056fea165627a7a723058205ce1ab38d0b4d2376c3288840c14968892bbf925791d64ac5c98360a1423ba170029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFB DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x44 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x98217D2C DUP2 EQ PUSH1 0x49 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x79 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x3976BF2AA4E13CADCCCA621650482E51213672FD3D1634F4AD087534CFDD55B1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0x5c 0xe1 0xab CODESIZE 0xd0 0xb4 0xd2 CALLDATACOPY PUSH13 0x3288840C14968892BBF925791D PUSH5 0xAC5C98360A EQ 0x23 0xba OR STOP 0x29 ",
              "sourceMap": "149:173:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;149:173:2;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50600436106044577c0100000000000000000000000000000000000000000000000000000000600035046398217d2c81146049575b600080fd5b607960048036036020811015605d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16607b565b005b604080516000815273ffffffffffffffffffffffffffffffffffffffff8316602082015281517f3976bf2aa4e13cadccca621650482e51213672fd3d1634f4ad087534cfdd55b1929181900390910190a15056fea165627a7a723058205ce1ab38d0b4d2376c3288840c14968892bbf925791d64ac5c98360a1423ba170029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x44 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x98217D2C DUP2 EQ PUSH1 0x49 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x79 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x3976BF2AA4E13CADCCCA621650482E51213672FD3D1634F4AD087534CFDD55B1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0x5c 0xe1 0xab CODESIZE 0xd0 0xb4 0xd2 CALLDATACOPY PUSH13 0x3288840C14968892BBF925791D PUSH5 0xAC5C98360A EQ 0x23 0xba OR STOP 0x29 ",
              "sourceMap": "149:173:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;149:173:2;;;;;;;;;;;;;;;;;;;228:92;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;228:92:2;;;;:::i;:::-;;;284:31;;;303:3;284:31;;;;;;;;;;;;;;;;;;;;;;228:92;:::o"
            },
            "methodIdentifiers": {
              "batchCreate(address)": "98217d2c"
            }
          }
        }
      }
    },
    "sources": {
      "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol": {
        "ast": {
          "absolutePath": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol",
          "exportedSymbols": {
            "GnosisSafeProxy": [
              34
            ],
            "IProxy": [
              7
            ]
          },
          "id": 35,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0",
                "<",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:31:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": "@title IProxy - Helper interface to access masterCopy of the Proxy on-chain\n @author Richard Meissner - <richard@gnosis.io>",
              "fullyImplemented": false,
              "id": 7,
              "linearizedBaseContracts": [
                7
              ],
              "name": "IProxy",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "id": 6,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "masterCopy",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "206:2:0"
                  },
                  "returnParameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 6,
                        "src": "232:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "232:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "231:9:0"
                  },
                  "scope": 7,
                  "src": "187:54:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                }
              ],
              "scope": 35,
              "src": "164:79:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": "@title GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>",
              "fullyImplemented": true,
              "id": 34,
              "linearizedBaseContracts": [
                34
              ],
              "name": "GnosisSafeProxy",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 9,
                  "name": "masterCopy",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "758:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 27,
                    "nodeType": "Block",
                    "src": "964:125:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 15,
                                "name": "_masterCopy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "982:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 17,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1005:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 16,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "997:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 18,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "997:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "982:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "496e76616c6964206d617374657220636f707920616464726573732070726f7669646564",
                              "id": 20,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1009:38:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87",
                                "typeString": "literal_string \"Invalid master copy address provided\""
                              },
                              "value": "Invalid master copy address provided"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87",
                                "typeString": "literal_string \"Invalid master copy address provided\""
                              }
                            ],
                            "id": 14,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              90,
                              91
                            ],
                            "referencedDeclaration": 91,
                            "src": "974:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "974:74:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22,
                        "nodeType": "ExpressionStatement",
                        "src": "974:74:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 25,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 23,
                            "name": "masterCopy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "1058:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 24,
                            "name": "_masterCopy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "1071:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1058:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 26,
                        "nodeType": "ExpressionStatement",
                        "src": "1058:24:0"
                      }
                    ]
                  },
                  "documentation": "@dev Constructor function sets address of master copy contract.\n @param _masterCopy Master copy address.",
                  "id": 28,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "name": "_masterCopy",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "924:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "924:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "923:21:0"
                  },
                  "returnParameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "964:0:0"
                  },
                  "scope": 34,
                  "src": "912:177:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 32,
                    "nodeType": "Block",
                    "src": "1239:758:0",
                    "statements": [
                      {
                        "externalReferences": [],
                        "id": 31,
                        "nodeType": "InlineAssembly",
                        "operations": "{\n    let masterCopy := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\n    if eq(calldataload(0), 0xa619486e00000000000000000000000000000000000000000000000000000000)\n    {\n        mstore(0, masterCopy)\n        return(0, 0x20)\n    }\n    calldatacopy(0, 0, calldatasize())\n    let success := delegatecall(gas(), masterCopy, 0, calldatasize(), 0, 0)\n    returndatacopy(0, 0, returndatasize())\n    if eq(success, 0)\n    {\n        revert(0, returndatasize())\n    }\n    return(0, returndatasize())\n}",
                        "src": "1313:684:0"
                      }
                    ]
                  },
                  "documentation": "@dev Fallback function forwards all transactions and returns all received return data.",
                  "id": 33,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1199:2:0"
                  },
                  "returnParameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1239:0:0"
                  },
                  "scope": 34,
                  "src": "1190:807:0",
                  "stateMutability": "payable",
                  "superFunction": null,
                  "visibility": "external"
                }
              ],
              "scope": 35,
              "src": "470:1529:0"
            }
          ],
          "src": "0:2000:0"
        },
        "id": 0
      },
      "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol": {
        "ast": {
          "absolutePath": "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol",
          "exportedSymbols": {
            "IProxyCreationCallback": [
              49
            ]
          },
          "id": 50,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 36,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".3"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:1"
            },
            {
              "absolutePath": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol",
              "file": "./GnosisSafeProxy.sol",
              "id": 37,
              "nodeType": "ImportDirective",
              "scope": 50,
              "sourceUnit": 35,
              "src": "24:31:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 49,
              "linearizedBaseContracts": [
                49
              ],
              "name": "IProxyCreationCallback",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "id": 48,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proxyCreated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "name": "proxy",
                        "nodeType": "VariableDeclaration",
                        "scope": 48,
                        "src": "118:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GnosisSafeProxy_$34",
                          "typeString": "contract GnosisSafeProxy"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 38,
                          "name": "GnosisSafeProxy",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 34,
                          "src": "118:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GnosisSafeProxy_$34",
                            "typeString": "contract GnosisSafeProxy"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 41,
                        "name": "_mastercopy",
                        "nodeType": "VariableDeclaration",
                        "scope": 48,
                        "src": "141:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "141:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 43,
                        "name": "initializer",
                        "nodeType": "VariableDeclaration",
                        "scope": 48,
                        "src": "162:26:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "162:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 45,
                        "name": "saltNonce",
                        "nodeType": "VariableDeclaration",
                        "scope": 48,
                        "src": "190:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "190:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "117:91:1"
                  },
                  "returnParameters": {
                    "id": 47,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "217:0:1"
                  },
                  "scope": 49,
                  "src": "96:122:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                }
              ],
              "scope": 50,
              "src": "57:163:1"
            }
          ],
          "src": "0:221:1"
        },
        "id": 1
      },
      "contracts/SafeBatchCreate.sol": {
        "ast": {
          "absolutePath": "contracts/SafeBatchCreate.sol",
          "exportedSymbols": {
            "SafeBatchCreate": [
              72
            ]
          },
          "id": 73,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 51,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".3"
              ],
              "nodeType": "PragmaDirective",
              "src": "42:23:2"
            },
            {
              "absolutePath": "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol",
              "file": "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol",
              "id": 52,
              "nodeType": "ImportDirective",
              "scope": 73,
              "sourceUnit": 50,
              "src": "67:80:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 72,
              "linearizedBaseContracts": [
                72
              ],
              "name": "SafeBatchCreate",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 58,
                  "name": "safeCreate",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 54,
                        "indexed": false,
                        "name": "safe",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "195:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 53,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "195:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 56,
                        "indexed": false,
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "209:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "209:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "194:29:2"
                  },
                  "src": "178:46:2"
                },
                {
                  "body": {
                    "id": 70,
                    "nodeType": "Block",
                    "src": "271:49:2",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "307830",
                                  "id": 65,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "303:3:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0x0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 64,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "295:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 66,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "295:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 67,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "309:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 63,
                            "name": "safeCreate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "284:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "284:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 69,
                        "nodeType": "EmitStatement",
                        "src": "279:36:2"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 71,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "batchCreate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 61,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 60,
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 71,
                        "src": "249:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 59,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "249:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "248:15:2"
                  },
                  "returnParameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "271:0:2"
                  },
                  "scope": 72,
                  "src": "228:92:2",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 73,
              "src": "149:173:2"
            }
          ],
          "src": "42:281:2"
        },
        "id": 2
      }
    }
  }
}
